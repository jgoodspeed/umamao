var exclude_list = eval("<%= exclude_user_ids.to_json %>".replace(/&quot;/g,"\""));

Array.prototype.remove = function(e){
  i = this.indexOf(e);
  if(i > 1)
    this.splice(i, 1);
}
function clearData(data){
  new_data = new Array();
  data.forEach(function (it){
      if(it.id == undefined || $.inArray(it.id, exclude_list ) == -1){
      new_data[new_data.length] = it;
    }
    });
  return new_data;
}

/*
// User autocomplete for several boxes in the website.
function UserAutocomplete(inputField, itemBoxContainer) {
  AutocompleteBox.call(this, inputField, itemBoxContainer);
}


UserAutocomplete.prototype = {

  activateWithTab: true,

  // Populates the suggestion box when data is received.
  processData: function (data) {
    var items = [];
    var me = this;
    data = clearData(data);
    data.forEach(function (it) {
      if(it.photo_url == undefined && (data.length > 1))
        return;
      if(it.photo_url == undefined){
        item = {}
        item.id = undefined
        item.html = "<li class=\"autocomplete-entry\"> User not found </li>";
        items.push(me.makeItem(item));
        return;
      }
      item = $.extend({}, it);
      item.url = "/users/" + it.id;
      item.html = "<li class=\"autocomplete-entry\">" + it.photo_url + " " +
                             it.title + "</li>";
      items.push(me.makeItem(item));
    });
    return items;
  },

  returnDefault: function () {
    var input = this.input.val();
    if (input.trim() != "") {
      this.clear();
      this.action(input);
    }
  },

  // HACK
  itemClicked: null,

  // Action to be run on user title or input box value.
  action: null

};

Utils.extend(UserAutocomplete, AutocompleteBox);
*/
// Button to remove add the invited user
