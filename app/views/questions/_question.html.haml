- title = h(question.title)
- if question.closed
  - title += " [#{t("closed", :scope => "activerecord.attributes.question").upcase}]"

- if !local_assigns[:mini]
  - owner = nil
  - if question.last_target.present?
    - last_target = question.last_target
    - if last_target.respond_to?(:updated_by) && last_target.updated_by.present?
      - owner= last_target.updated_by
    - else
      - owner= last_target.user
  - else
    - last_target = question
    - owner = question.user

  %li.entry.item{:class => class_for_question(question)}
    -# Question Summary
    .summary
      - cache("question_on_index_#{question.id}_#{question.updated_at}") do
        %h3= link_to title, question_path(question), :title => truncate(question.body, :length => 200)
        %ul.topic-list
          - question.topics[0..5].each do |topic|
            %li
              .topic
                = link_to_topic(topic)

      -# Question Stats
      .info
        .metadata
          = t("activerecord.attributes.question.asked_by")
          = link_to h(question.user.name), user_path(question.user)
          \|
          = t("time.ago", :time => time_ago_in_words(last_target.updated_at))
          \|
          = format_number(question.answers_count)
          = t(:answer_count, :scope => "activerecord.models", :count => question.answers_count)
          = render :partial => 'shared/stats_follow', :locals => { :question => question }
    .clear
- else
  - cache("mini_question_on_index_#{question.id}_#{question.updated_at}") do
    %li.item{:class => "#{class_for_question(question)} #{local_assigns[:lite] ? 'lite' : ''}"}
      .stats
        .box.answers{:class => question.accepted ? "accepted" : "" }
          .counter
            = format_number(question.answers_count)
          - if !local_assigns[:lite]
            .text
              = t(:answers, :scope => "activerecord.attributes.question")
      .summary
        %h3
          = link_to title, question_path(question)
      .clear
